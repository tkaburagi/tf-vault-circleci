workflows:
  version: 2.1
  azure-infra-provision:
    jobs:
      - terraform-test
      - generate-tfc-token:
          requires:
            - terraform-test
      - generate-azure-secret:
          requires:
            - generate-tfc-token
      - provision-infra:
          requires:
            - generate-azure-secret
version: 2.1
executors:
  tf-executor:
    docker:
      - image: hashicorp/terraform
    working_directory: /tmp
  vault-executor:
    docker:
      - image: hashicorp/vault
    working_directory: /home/vault
jobs:
  terraform-test:
    executor: tf-executor
    steps:
      - run:
          name: "Terraform Test"
          command: |
            pwd
            apk add git
            git clone https://github.com/tkaburagi/tf-vault-github-actions-src
            terraform -version
            ls -ltrR
            cd tf-vault-github-actions-src
            terraform fmt -diff=true
            terraform init
            terraform validate
  generate-tfc-token:
    executor: vault-executor
    steps:
      - run: mkdir workspace
      - run:
          name: "Import TFC API Token from Vault"
          command: |
            pwd
            vault -version
            vault read -format json tfc/creds/ci-user > workspace/tf-token.json
      - persist_to_workspace:
          root: workspace
          paths:
            - tf-token.json
  generate-azure-secret:
    executor: vault-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: mkdir workspace
      - run:
          name: "Import Azure Secrets from Vault"
          command: |
            pwd
            apk add jq
            vault read -format json azure/creds/contributor > workspace/client-creds.json
            vault kv get -format json secret/azure/environment > workspace/env-creds.json
      - persist_to_workspace:
          root: workspace
          paths:
            - env-creds.json
            - client-creds.json
  provision-infra:
    executor: tf-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Make TFC"
          command: |
            apk add jq
            export TFC_TOKEN=$(cat /tmp/workspace/tf-token.json | jq -r '.data.token')
            export ARM_CLIENT_ID=$(cat /tmp/workspace/client-creds.json | jq -r '.data.client_id')
            export ARM_CLIENT_SECRET=$(cat /tmp/workspace/client-creds.json | jq -r '.data.client_secret')
            export ARM_SUBSCRIPTION_ID=$(cat /tmp/workspace/env-creds.json | jq -r '.data.data.subscription_id')
            export ARM_TENANT_ID=$(cat /tmp/workspace/env-creds.json | jq -r '.data.data.tenant_id')

            curl \
            --header "Authorization: Bearer ${TFC_TOKEN}" \
            --header "Content-Type: application/vnd.api+json" \
              https://app.terraform.io/api/v2/workspaces/${WS_ID} | jq -r '.data.relationships.organization.data.id' > org-name

            curl \
            --header "Authorization: Bearer ${TFC_TOKEN}" \
            --header "Content-Type: application/vnd.api+json" \
              https://app.terraform.io/api/v2/workspaces/${WS_ID} | jq -r '.data.attributes.name' > ws-name

            WS_NAME=$(cat ws-name)
            ORG_NAME=$(cat org-name)

            cat \<< EOF > main.tf
            terraform {
              backend "remote" {
                organization = "${ORG_NAME}"
                workspaces {
                  name = "${WS_NAME}"
                }
              }
            }

            provider "azurerm" {
              features {}
            }
            EOF

            cat main.tf
            ls -ltrR

            rm /tmp/workspace/*.json
            ls -ltrR /tmp/workspace